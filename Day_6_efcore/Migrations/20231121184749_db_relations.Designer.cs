// <auto-generated />
using Day_6_efcore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Day_6_efcore.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20231121184749_db_relations")]
    partial class db_relations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Day_6_efcore.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("branch_name");

                    b.HasKey("Id");

                    b.ToTable("Branch_db", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BranchName = "Football"
                        });
                });

            modelBuilder.Entity("Day_6_efcore.Models.Outfit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("outfit_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("outfit_brand_name");

                    b.Property<short>("No")
                        .HasColumnType("smallint")
                        .HasColumnName("outfit_no");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("outfit_type");

                    b.HasKey("Id");

                    b.ToTable("Outfits_db", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "Adidas",
                            No = (short)42,
                            PlayerId = 1,
                            Type = 0
                        });
                });

            modelBuilder.Entity("Day_6_efcore.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("player_age");

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("player_name");

                    b.Property<int>("OutfitId")
                        .HasColumnType("int")
                        .HasColumnName("outfit_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("player_price");

                    b.Property<int>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("team_id");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("TeamId");

                    b.ToTable("Players_db", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 30,
                            BranchId = 1,
                            Name = "Mauro Icardi",
                            OutfitId = 1,
                            Price = 30000000m,
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("Day_6_efcore.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("team_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("team_name");

                    b.HasKey("Id");

                    b.ToTable("Teams_db", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TeamName = "Galatasaray"
                        });
                });

            modelBuilder.Entity("Day_6_efcore.Models.Player", b =>
                {
                    b.HasOne("Day_6_efcore.Models.Branch", "Branch")
                        .WithMany("Players")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Day_6_efcore.Models.Outfit", "Outfit")
                        .WithOne("Player")
                        .HasForeignKey("Day_6_efcore.Models.Player", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Day_6_efcore.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Outfit");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Day_6_efcore.Models.Branch", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("Day_6_efcore.Models.Outfit", b =>
                {
                    b.Navigation("Player")
                        .IsRequired();
                });

            modelBuilder.Entity("Day_6_efcore.Models.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
